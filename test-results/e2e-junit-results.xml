<testsuites id="" name="" tests="128" failures="66" skipped="0" errors="0" time="248.19546099999548">
<testsuite name="tests\MercuryAvailabilityTest.spec.js" timestamp="1674009963863" hostname="" tests="7" failures="1" skipped="0" time="18.937" errors="0">
<testcase name="01.If Home page Available" classname="[chromium] › tests\MercuryAvailabilityTest.spec.js › 01.If Home page Available" time="3.343">
</testcase>
<testcase name="02.If Transaction button Available" classname="[chromium] › tests\MercuryAvailabilityTest.spec.js › 02.If Transaction button Available" time="3.156">
<failure message="MercuryAvailabilityTest.spec.js:7:5 02.If Transaction button Available" type="FAILURE">
<![CDATA[  [chromium] › tests\MercuryAvailabilityTest.spec.js:7:5 › 02.If Transaction button Available ======

    locator.click: Error: strict mode violation: getByRole('link', { name: 'Transactions' }) resolved to 3 elements:
        1) <a href="/transactions" class="styles__link_eiRKS s…>Transactions</a> aka getByRole('link', { name: 'Transactions' }).filter({ hasText: 'Transactions' })
        2) <a aria-label="View all outgoing transactions" href…>View All</a> aka getByRole('link', { name: 'View all outgoing transactions' })
        3) <a aria-label="View all incoming transactions" href…>View All</a> aka getByRole('link', { name: 'View all incoming transactions' })

    =========================== logs ===========================
    waiting for getByRole('link', { name: 'Transactions' })
      strict mode violation: getByRole('link', { name: 'Transactions' }) resolved to 3 elements:
        1) <a href="/transactions" class="styles__link_eiRKS s…>Transactions</a> aka getByRole('link', { name: 'Transactions' }).filter({ hasText: 'Transactions' })
        2) <a aria-label="View all outgoing transactions" href…>View All</a> aka getByRole('link', { name: 'View all outgoing transactions' })
        3) <a aria-label="View all incoming transactions" href…>View All</a> aka getByRole('link', { name: 'View all incoming transactions' })

    ============================================================

       7 | test('02.If Transaction button Available', async ({ page }) => {
       8 |     await page.goto('https://demo.mercury.com/dashboard');
    >  9 |     await page.getByRole('link', { name: 'Transactions' }).click();
         |                                                            ^
      10 |     await expect(page).toHaveURL('https://demo.mercury.com/transactions')
      11 | })
      12 | test('03.If Payment button Available', async ({ page }) => {

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryAvailabilityTest.spec.js:9:60
]]>
</failure>
</testcase>
<testcase name="03.If Payment button Available" classname="[chromium] › tests\MercuryAvailabilityTest.spec.js › 03.If Payment button Available" time="2.787">
</testcase>
<testcase name="04.If Cards button Available" classname="[chromium] › tests\MercuryAvailabilityTest.spec.js › 04.If Cards button Available" time="2.315">
</testcase>
<testcase name="05.If Credit button Available" classname="[chromium] › tests\MercuryAvailabilityTest.spec.js › 05.If Credit button Available" time="2.258">
</testcase>
<testcase name="06.If Tresury button Available" classname="[chromium] › tests\MercuryAvailabilityTest.spec.js › 06.If Tresury button Available" time="2.652">
</testcase>
<testcase name="07.If Capital button Available" classname="[chromium] › tests\MercuryAvailabilityTest.spec.js › 07.If Capital button Available" time="2.426">
</testcase>
</testsuite>
<testsuite name="tests\MercuryCardsTest.spec.js" timestamp="1674009963863" hostname="" tests="5" failures="3" skipped="0" time="74.129" errors="0">
<testcase name="20. If cards page available" classname="[chromium] › tests\MercuryCardsTest.spec.js › 20. If cards page available" time="3.17">
</testcase>
<testcase name="21. Issue new standard card" classname="[chromium] › tests\MercuryCardsTest.spec.js › 21. Issue new standard card" time="30">
<failure message="MercuryCardsTest.spec.js:8:5 21. Issue new standard card" type="FAILURE">
<![CDATA[  [chromium] › tests\MercuryCardsTest.spec.js:8:5 › 21. Issue new standard card ====================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for locator('#id-j14l1x')
    ============================================================

       8 | test('21. Issue new standard card', async ({ page }) => {
       9 |     await page.goto('https://demo.mercury.com/cards');
    > 10 |     await page.locator('#id-j14l1x').click();
         |                                      ^
      11 |     await page.getByText('Standard card').click();
      12 |     await page.locator('.styles__card_BmqNZ').first().click();
      13 |     await page.getByPlaceholder('e.g. Lunch Card').click();

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryCardsTest.spec.js:10:38

    Pending operations:
      - locator.click at tests\MercuryCardsTest.spec.js:10:38

]]>
</failure>
</testcase>
<testcase name="22. Issue new merchant card" classname="[chromium] › tests\MercuryCardsTest.spec.js › 22. Issue new merchant card" time="30.012">
<failure message="MercuryCardsTest.spec.js:20:7 22. Issue new merchant card" type="FAILURE">
<![CDATA[  [chromium] › tests\MercuryCardsTest.spec.js:20:7 › 22. Issue new merchant card ===================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for locator('#id-lprcjl')
    ============================================================

      20 |   test('22. Issue new merchant card', async ({ page }) => {
      21 |     await page.goto('https://demo.mercury.com/cards');
    > 22 |     await page.locator('#id-lprcjl').click();
         |                                      ^
      23 |     const locator = await page.getByText('Merchant card');
      24 |     await expect(locator).toHaveText('Merchant card')
      25 |     await page.getByRole('heading', { name: 'Create a merchant card' }).click();

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryCardsTest.spec.js:22:38

    Pending operations:
      - locator.click at tests\MercuryCardsTest.spec.js:22:38

]]>
</failure>
</testcase>
<testcase name="23. Card filter test" classname="[chromium] › tests\MercuryCardsTest.spec.js › 23. Card filter test" time="7.669">
<failure message="MercuryCardsTest.spec.js:36:7 23. Card filter test" type="FAILURE">
<![CDATA[  [chromium] › tests\MercuryCardsTest.spec.js:36:7 › 23. Card filter test ==========================

    Error: expect(received).toHaveText(expected)

    Expected string: "Credit Cards Remove Tag"
    Received string: "Credit Cards"
    Call log:
      - expect.toHaveText with timeout 5000ms
      - waiting for getByRole('button', { name: 'Credit Cards Remove Tag' })
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"
      - waiting for getByRole('button', { name: 'Credit Cards Remove Tag' })
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"


      39 |     await page.getByLabel('Credit').check();
      40 |     const locator = await page.getByRole('button', { name: 'Credit Cards Remove Tag' });
    > 41 |     await expect(locator).toHaveText('Credit Cards Remove Tag' );
         |                           ^
      42 |   });
      43 |
      44 |   test('24. Card details and reveal', async ({ page }) => {

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryCardsTest.spec.js:41:27
]]>
</failure>
</testcase>
<testcase name="24. Card details and reveal" classname="[chromium] › tests\MercuryCardsTest.spec.js › 24. Card details and reveal" time="3.278">
</testcase>
</testsuite>
<testsuite name="tests\MercuryCreditTest.spec.js" timestamp="1674009963863" hostname="" tests="2" failures="0" skipped="0" time="6.221" errors="0">
<testcase name="25. Credit Page available" classname="[chromium] › tests\MercuryCreditTest.spec.js › 25. Credit Page available" time="2.754">
</testcase>
<testcase name="26. Credit pay" classname="[chromium] › tests\MercuryCreditTest.spec.js › 26. Credit pay" time="3.467">
</testcase>
</testsuite>
<testsuite name="tests\MercuryHomeTest.spec.js" timestamp="1674009963863" hostname="" tests="6" failures="2" skipped="0" time="51.28" errors="0">
<testcase name="08.If signed in" classname="[chromium] › tests\MercuryHomeTest.spec.js › 08.If signed in" time="3.468">
</testcase>
<testcase name="09. If Move money works" classname="[chromium] › tests\MercuryHomeTest.spec.js › 09. If Move money works" time="30.005">
<failure message="MercuryHomeTest.spec.js:9:5 09. If Move money works" type="FAILURE">
<![CDATA[  [chromium] › tests\MercuryHomeTest.spec.js:9:5 › 09. If Move money works =========================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByPlaceholder('0.00')
    ============================================================

      16 |     await page.getByText('International WireUsed last timeFree for USD1-3 business days').click();
      17 |     await page.getByRole('button', { name: 'Next' }).click();
    > 18 |     await page.getByPlaceholder('0.00').click();
         |                                         ^
      19 |     await page.getByPlaceholder('0.00').fill('15');
      20 |     await page.getByText('Send as SHAFree').click();
      21 |     await page.getByRole('button', { name: 'Next' }).click();

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryHomeTest.spec.js:18:41

    Pending operations:
      - locator.click at tests\MercuryHomeTest.spec.js:18:41

]]>
</failure>
</testcase>
<testcase name="10. Add fund" classname="[chromium] › tests\MercuryHomeTest.spec.js › 10. Add fund" time="3.577">
</testcase>
<testcase name="11. Payment Request" classname="[chromium] › tests\MercuryHomeTest.spec.js › 11. Payment Request" time="3.947">
</testcase>
<testcase name="12. Transfer Between Accounts" classname="[chromium] › tests\MercuryHomeTest.spec.js › 12. Transfer Between Accounts" time="3.311">
</testcase>
<testcase name="13. Search Bar Function" classname="[chromium] › tests\MercuryHomeTest.spec.js › 13. Search Bar Function" time="6.972">
<failure message="MercuryHomeTest.spec.js:85:7 13. Search Bar Function" type="FAILURE">
<![CDATA[  [chromium] › tests\MercuryHomeTest.spec.js:85:7 › 13. Search Bar Function ========================

    Error: Timed out 5000ms waiting for expect(received).toHaveText(expected)

    Expected string: "Transactions Page"
    Received string: ""
    Call log:
      - expect.toHaveText with timeout 5000ms
      - waiting for getByText('Transactions Page')
      - waiting for getByText('Transactions Page')


      88 |     await page.getByPlaceholder('Search for transactions, accounts, pages, payees …').fill('tra');
      89 |     const locator = await page.getByText('Transactions Page');
    > 90 |     await expect(locator).toHaveText('Transactions Page');
         |                           ^
      91 |     await page.getByText('Transactions Page').click();
      92 |     await expect(page).toHaveURL('https://demo.mercury.com/transactions');
      93 |   });

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryHomeTest.spec.js:90:27
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="tests\MercuryPaymentTest.spec.js" timestamp="1674009963863" hostname="" tests="6" failures="2" skipped="0" time="27.426" errors="0">
<testcase name="14. Payment Page available" classname="[chromium] › tests\MercuryPaymentTest.spec.js › 14. Payment Page available" time="2.927">
</testcase>
<testcase name="15. Incoming Payment" classname="[chromium] › tests\MercuryPaymentTest.spec.js › 15. Incoming Payment" time="3.891">
<failure message="MercuryPaymentTest.spec.js:8:5 15. Incoming Payment" type="FAILURE">
<![CDATA[  [chromium] › tests\MercuryPaymentTest.spec.js:8:5 › 15. Incoming Payment =========================

    TypeError: Assignment to constant variable.

      12 |     await expect(locator).toHaveText('Payment Requests');
      13 |     await page.getByText('CBCharles Bonito').first().click();
    > 14 |     locator = await page.getByText('June consulting fees for Pluto Project');
         |            ^
      15 |     await expect(locator).toHaveText('June consulting fees for Pluto Project');
      16 |   });
      17 |

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryPaymentTest.spec.js:14:12
]]>
</failure>
</testcase>
<testcase name="16. Recipents Page" classname="[chromium] › tests\MercuryPaymentTest.spec.js › 16. Recipents Page" time="2.454">
</testcase>
<testcase name="17. Recipents Details" classname="[chromium] › tests\MercuryPaymentTest.spec.js › 17. Recipents Details" time="3.08">
</testcase>
<testcase name="18. Recipents request payment" classname="[chromium] › tests\MercuryPaymentTest.spec.js › 18. Recipents request payment" time="5.531">
</testcase>
<testcase name="19. Send Payment" classname="[chromium] › tests\MercuryPaymentTest.spec.js › 19. Send Payment" time="9.543">
<failure message="MercuryPaymentTest.spec.js:47:7 19. Send Payment" type="FAILURE">
<![CDATA[  [chromium] › tests\MercuryPaymentTest.spec.js:47:7 › 19. Send Payment ============================

    Error: expect(received).toHaveText(expected)

    Expected string: "You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days"
    Received string: "You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days.PendingJGJason Green−$15.00ReceiptGo to DashboardMake Another Payment"
    Call log:
      - expect.toHaveText with timeout 5000ms
      - waiting for getByText('You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days')
      - waiting for getByText('You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days')
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days.PendingJGJason Green−$15.00ReceiptGo to DashboardMake Another Payment"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days.PendingJGJason Green−$15.00ReceiptGo to DashboardMake Another Payment"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days.PendingJGJason Green−$15.00ReceiptGo to DashboardMake Another Payment"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days.PendingJGJason Green−$15.00ReceiptGo to DashboardMake Another Payment"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days.PendingJGJason Green−$15.00ReceiptGo to DashboardMake Another Payment"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days.PendingJGJason Green−$15.00ReceiptGo to DashboardMake Another Payment"


      65 |     await page.getByRole('button', { name: 'Send Wire' }).click();
      66 |     const locator = await page.getByText('You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days');
    > 67 |     await expect(locator).toHaveText('You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days');
         |                           ^
      68 |   });

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryPaymentTest.spec.js:67:27
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="tests\MercuryTransactionTest.spec.js" timestamp="1674009963863" hostname="" tests="2" failures="2" skipped="0" time="40.354" errors="0">
<testcase name="14. is Transaction filters works" classname="[chromium] › tests\MercuryTransactionTest.spec.js › 14. is Transaction filters works" time="10.35">
<failure message="MercuryTransactionTest.spec.js:3:5 14. is Transaction filters works" type="FAILURE">
<![CDATA[  [chromium] › tests\MercuryTransactionTest.spec.js:3:5 › 14. is Transaction filters works =========

    Error: Timed out 5000ms waiting for expect(received).toBeVisible()
    Call log:
      - expect.toBeVisible with timeout 5000ms
      - waiting for getByRole('button', { name: 'Money in, = $100 Remove Tag' })
      - waiting for getByRole('button', { name: 'Money in, = $100 Remove Tag' })


      10 |   await page.getByRole('tab', { name: 'Method' }).getByText('Method').click();
      11 |   await page.locator('span').filter({ hasText: 'Mercury Payment (ACH)' }).first().click();
    > 12 |   await expect(page.getByRole('button', { name: 'Money in, = $100 Remove Tag' })).toBeVisible();
         |                                                                                   ^
      13 |   await expect(page.getByRole('button', { name: 'Mercury Payment (ACH) Remove Tag' })).toBeVisible();
      14 | });
      15 |

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryTransactionTest.spec.js:12:83
]]>
</failure>
</testcase>
<testcase name="15. view all transactions" classname="[chromium] › tests\MercuryTransactionTest.spec.js › 15. view all transactions" time="30.004">
<failure message="MercuryTransactionTest.spec.js:16:5 15. view all transactions" type="FAILURE">
<![CDATA[  [chromium] › tests\MercuryTransactionTest.spec.js:16:5 › 15. view all transactions ===============

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByRole('link', { name: 'Jameson Accounting View all transactions' })
    ============================================================

      17 |     await page.goto('https://demo.mercury.com/transactions');
      18 |     await page.getByText('Jameson Accounting').click();
    > 19 |     await page.getByRole('link', { name: 'Jameson Accounting View all transactions' }).click();
         |                                                                                        ^
      20 |     await expect(page.getByRole('button', { name: 'Jameson Accounting Remove Tag' })).toBeVisible();
      21 | });
      22 |

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryTransactionTest.spec.js:19:88

    Pending operations:
      - locator.click at tests\MercuryTransactionTest.spec.js:19:88

]]>
</failure>
</testcase>
</testsuite>
<testsuite name="tests\MercuryTreasuryTest.spec.js" timestamp="1674009963863" hostname="" tests="4" failures="3" skipped="0" time="24.915" errors="0">
<testcase name="27. Treasury Page Available" classname="[chromium] › tests\MercuryTreasuryTest.spec.js › 27. Treasury Page Available" time="4.85">
</testcase>
<testcase name="28. Treasury Transfer In" classname="[chromium] › tests\MercuryTreasuryTest.spec.js › 28. Treasury Transfer In" time="8.545">
<failure message="MercuryTreasuryTest.spec.js:8:5 28. Treasury Transfer In" type="FAILURE">
<![CDATA[  [chromium] › tests\MercuryTreasuryTest.spec.js:8:5 › 28. Treasury Transfer In ====================

    Error: expect(received).toHaveText(expected)

    Expected string: "You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should a"
    Received string: "You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should arrive within 2-3 business days.Go to DashboardMake Another Transfer"
    Call log:
      - expect.toHaveText with timeout 5000ms
      - waiting for getByText('You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should a')
      - waiting for getByText('You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should a')
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should arrive within 2-3 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should arrive within 2-3 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should arrive within 2-3 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should arrive within 2-3 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should arrive within 2-3 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should arrive within 2-3 business days.Go to DashboardMake Another Transfer"


      17 |     await page.getByRole('button', { name: 'Transfer' }).click();
      18 |     const locator = await page.getByText('You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should a');
    > 19 |     await expect(locator).toHaveText('You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should a');
         |                           ^
      20 |   });
      21 |
      22 | test('29. Treasury Transfer out', async ({ page }) => {

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryTreasuryTest.spec.js:19:27
]]>
</failure>
</testcase>
<testcase name="29. Treasury Transfer out" classname="[chromium] › tests\MercuryTreasuryTest.spec.js › 29. Treasury Transfer out" time="8.129">
<failure message="MercuryTreasuryTest.spec.js:22:5 29. Treasury Transfer out" type="FAILURE">
<![CDATA[  [chromium] › tests\MercuryTreasuryTest.spec.js:22:5 › 29. Treasury Transfer out ==================

    Error: expect(received).toHaveText(expected)

    Expected string: "You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should"
    Received string: "You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should arrive within 4-5 business days.Go to DashboardMake Another Transfer"
    Call log:
      - expect.toHaveText with timeout 5000ms
      - waiting for getByText('You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should')
      - waiting for getByText('You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should')
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should arrive within 4-5 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should arrive within 4-5 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should arrive within 4-5 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should arrive within 4-5 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should arrive within 4-5 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should arrive within 4-5 business days.Go to DashboardMake Another Transfer"


      31 |     await page.getByRole('button', { name: 'Transfer' }).click();
      32 |     const locator = await page.getByText('You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should');
    > 33 |     await expect(locator).toHaveText('You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should');
         |                           ^
      34 | });
      35 |
      36 | test('30. Treasury Daily and Monthly filter', async ({ page }) => {

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryTreasuryTest.spec.js:33:27
]]>
</failure>
</testcase>
<testcase name="30. Treasury Daily and Monthly filter" classname="[chromium] › tests\MercuryTreasuryTest.spec.js › 30. Treasury Daily and Monthly filter" time="3.391">
<failure message="MercuryTreasuryTest.spec.js:36:5 30. Treasury Daily and Monthly filter" type="FAILURE">
<![CDATA[  [chromium] › tests\MercuryTreasuryTest.spec.js:36:5 › 30. Treasury Daily and Monthly filter ======

    expect.toHaveText: Error: strict mode violation: getByText('Month') resolved to 4 elements:
        1) <div class="styles__tiny_kCP28 styles__grey_eIIgC sty…>Last month’s return</div> aka getByText('Last month’s return')
        2) <div>…</div> aka getByRole('button', { name: 'Monthly' }).nth(1)
        3) <span class="styles__tiny_kCP28 styles__grey-medium_uV…>Month</span> aka getByText('Month').nth(2)
        4) <div class="styles__tiny_kCP28 styles__grey_eIIgC sty…>Last month’s fee</div> aka getByText('Last month’s fee')

    =========================== logs ===========================
    expect.toHaveText with timeout 5000ms
    waiting for getByText('Month')
      strict mode violation: getByText('Month') resolved to 4 elements:
        1) <div class="styles__tiny_kCP28 styles__grey_eIIgC sty…>Last month’s return</div> aka getByText('Last month’s return')
        2) <div>…</div> aka getByRole('button', { name: 'Monthly' }).nth(1)
        3) <span class="styles__tiny_kCP28 styles__grey-medium_uV…>Month</span> aka getByText('Month').nth(2)
        4) <div class="styles__tiny_kCP28 styles__grey_eIIgC sty…>Last month’s fee</div> aka getByText('Last month’s fee')

    ============================================================

      39 |     await page.getByRole('menuitem', { name: 'Monthly' }).click();
      40 |     const locator = await page.getByText('Month');
    > 41 |     await expect(locator).toHaveText('Month');
         |                           ^
      42 |     await page.getByRole('button', { name: 'Monthly' }).nth(1).click();
      43 |     await page.getByRole('menuitem', { name: 'Daily' }).click();
      44 |     locator = await page.getByText('Date');

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryTreasuryTest.spec.js:41:27
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="tests\MercuryAvailabilityTest.spec.js" timestamp="1674009963863" hostname="" tests="7" failures="6" skipped="0" time="182.266" errors="0">
<testcase name="01.If Home page Available" classname="[pixel] › tests\MercuryAvailabilityTest.spec.js › 01.If Home page Available" time="2.242">
</testcase>
<testcase name="02.If Transaction button Available" classname="[pixel] › tests\MercuryAvailabilityTest.spec.js › 02.If Transaction button Available" time="30.004">
<failure message="MercuryAvailabilityTest.spec.js:7:5 02.If Transaction button Available" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryAvailabilityTest.spec.js:7:5 › 02.If Transaction button Available =========

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByRole('link', { name: 'Transactions' })
    ============================================================

       7 | test('02.If Transaction button Available', async ({ page }) => {
       8 |     await page.goto('https://demo.mercury.com/dashboard');
    >  9 |     await page.getByRole('link', { name: 'Transactions' }).click();
         |                                                            ^
      10 |     await expect(page).toHaveURL('https://demo.mercury.com/transactions')
      11 | })
      12 | test('03.If Payment button Available', async ({ page }) => {

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryAvailabilityTest.spec.js:9:60

    Pending operations:
      - locator.click at tests\MercuryAvailabilityTest.spec.js:9:60

]]>
</failure>
</testcase>
<testcase name="03.If Payment button Available" classname="[pixel] › tests\MercuryAvailabilityTest.spec.js › 03.If Payment button Available" time="30.003">
<failure message="MercuryAvailabilityTest.spec.js:12:5 03.If Payment button Available" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryAvailabilityTest.spec.js:12:5 › 03.If Payment button Available ============

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByRole('link', { name: 'Payments' })
    ============================================================

      12 | test('03.If Payment button Available', async ({ page }) => {
      13 |     await page.goto('https://demo.mercury.com/dashboard');
    > 14 |     await page.getByRole('link', { name: 'Payments' }).click();
         |                                                        ^
      15 |     await expect(page).toHaveURL('https://demo.mercury.com/payments')
      16 | })
      17 | test('04.If Cards button Available', async ({ page }) => {

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryAvailabilityTest.spec.js:14:56

    Pending operations:
      - locator.click at tests\MercuryAvailabilityTest.spec.js:14:56

]]>
</failure>
</testcase>
<testcase name="04.If Cards button Available" classname="[pixel] › tests\MercuryAvailabilityTest.spec.js › 04.If Cards button Available" time="29.999">
<failure message="MercuryAvailabilityTest.spec.js:17:5 04.If Cards button Available" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryAvailabilityTest.spec.js:17:5 › 04.If Cards button Available ==============

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByRole('link', { name: 'Cards' })
    ============================================================

      17 | test('04.If Cards button Available', async ({ page }) => {
      18 |     await page.goto('https://demo.mercury.com/dashboard');
    > 19 |     await page.getByRole('link', { name: 'Cards' }).click();
         |                                                     ^
      20 |     await expect(page).toHaveURL('https://demo.mercury.com/cards')
      21 | })
      22 | test('05.If Credit button Available', async ({ page }) => {

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryAvailabilityTest.spec.js:19:53

    Pending operations:
      - locator.click at tests\MercuryAvailabilityTest.spec.js:19:53

]]>
</failure>
</testcase>
<testcase name="05.If Credit button Available" classname="[pixel] › tests\MercuryAvailabilityTest.spec.js › 05.If Credit button Available" time="30.009">
<failure message="MercuryAvailabilityTest.spec.js:22:5 05.If Credit button Available" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryAvailabilityTest.spec.js:22:5 › 05.If Credit button Available =============

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByRole('link', { name: 'Credit' })
    ============================================================

      22 | test('05.If Credit button Available', async ({ page }) => {
      23 |     await page.goto('https://demo.mercury.com/dashboard');
    > 24 |     await page.getByRole('link', { name: 'Credit' }).click();
         |                                                      ^
      25 |     await expect(page).toHaveURL('https://demo.mercury.com/credit')
      26 | })
      27 | test('06.If Tresury button Available', async ({ page }) => {

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryAvailabilityTest.spec.js:24:54

    Pending operations:
      - locator.click at tests\MercuryAvailabilityTest.spec.js:24:54

]]>
</failure>
</testcase>
<testcase name="06.If Tresury button Available" classname="[pixel] › tests\MercuryAvailabilityTest.spec.js › 06.If Tresury button Available" time="30.002">
<failure message="MercuryAvailabilityTest.spec.js:27:5 06.If Tresury button Available" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryAvailabilityTest.spec.js:27:5 › 06.If Tresury button Available ============

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByRole('link', { name: 'Treasury' })
    ============================================================

      27 | test('06.If Tresury button Available', async ({ page }) => {
      28 |     await page.goto('https://demo.mercury.com/dashboard');
    > 29 |     await page.getByRole('link', { name: 'Treasury' }).click();
         |                                                        ^
      30 |     await expect(page).toHaveURL('https://demo.mercury.com/accounts/treasury/party-treasury-id-0')
      31 | })
      32 | test('07.If Capital button Available', async ({ page }) => {

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryAvailabilityTest.spec.js:29:56

    Pending operations:
      - locator.click at tests\MercuryAvailabilityTest.spec.js:29:56

]]>
</failure>
</testcase>
<testcase name="07.If Capital button Available" classname="[pixel] › tests\MercuryAvailabilityTest.spec.js › 07.If Capital button Available" time="30.007">
<failure message="MercuryAvailabilityTest.spec.js:32:5 07.If Capital button Available" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryAvailabilityTest.spec.js:32:5 › 07.If Capital button Available ============

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByRole('link', { name: 'Capital' })
    ============================================================

      32 | test('07.If Capital button Available', async ({ page }) => {
      33 |     await page.goto('https://demo.mercury.com/dashboard');
    > 34 |     await page.getByRole('link', { name: 'Capital' }).click();
         |                                                       ^
      35 |     await expect(page).toHaveURL('https://demo.mercury.com/capital')
      36 | })

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryAvailabilityTest.spec.js:34:55

    Pending operations:
      - locator.click at tests\MercuryAvailabilityTest.spec.js:34:55

]]>
</failure>
</testcase>
</testsuite>
<testsuite name="tests\MercuryCardsTest.spec.js" timestamp="1674009963863" hostname="" tests="5" failures="4" skipped="0" time="124.257" errors="0">
<testcase name="20. If cards page available" classname="[pixel] › tests\MercuryCardsTest.spec.js › 20. If cards page available" time="4.234">
</testcase>
<testcase name="21. Issue new standard card" classname="[pixel] › tests\MercuryCardsTest.spec.js › 21. Issue new standard card" time="30.011">
<failure message="MercuryCardsTest.spec.js:8:5 21. Issue new standard card" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryCardsTest.spec.js:8:5 › 21. Issue new standard card =======================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for locator('#id-j14l1x')
    ============================================================

       8 | test('21. Issue new standard card', async ({ page }) => {
       9 |     await page.goto('https://demo.mercury.com/cards');
    > 10 |     await page.locator('#id-j14l1x').click();
         |                                      ^
      11 |     await page.getByText('Standard card').click();
      12 |     await page.locator('.styles__card_BmqNZ').first().click();
      13 |     await page.getByPlaceholder('e.g. Lunch Card').click();

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryCardsTest.spec.js:10:38

    Pending operations:
      - locator.click at tests\MercuryCardsTest.spec.js:10:38

]]>
</failure>
</testcase>
<testcase name="22. Issue new merchant card" classname="[pixel] › tests\MercuryCardsTest.spec.js › 22. Issue new merchant card" time="30.003">
<failure message="MercuryCardsTest.spec.js:20:7 22. Issue new merchant card" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryCardsTest.spec.js:20:7 › 22. Issue new merchant card ======================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for locator('#id-lprcjl')
    ============================================================

      20 |   test('22. Issue new merchant card', async ({ page }) => {
      21 |     await page.goto('https://demo.mercury.com/cards');
    > 22 |     await page.locator('#id-lprcjl').click();
         |                                      ^
      23 |     const locator = await page.getByText('Merchant card');
      24 |     await expect(locator).toHaveText('Merchant card')
      25 |     await page.getByRole('heading', { name: 'Create a merchant card' }).click();

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryCardsTest.spec.js:22:38

    Pending operations:
      - locator.click at tests\MercuryCardsTest.spec.js:22:38

]]>
</failure>
</testcase>
<testcase name="23. Card filter test" classname="[pixel] › tests\MercuryCardsTest.spec.js › 23. Card filter test" time="30.005">
<failure message="MercuryCardsTest.spec.js:36:7 23. Card filter test" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryCardsTest.spec.js:36:7 › 23. Card filter test =============================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByRole('button', { name: 'Add Filter' })
    ============================================================

      36 |   test('23. Card filter test', async ({ page }) => {
      37 |     await page.goto('https://demo.mercury.com/cards');
    > 38 |     await page.getByRole('button', { name: 'Add Filter' }).click();
         |                                                            ^
      39 |     await page.getByLabel('Credit').check();
      40 |     const locator = await page.getByRole('button', { name: 'Credit Cards Remove Tag' });
      41 |     await expect(locator).toHaveText('Credit Cards Remove Tag' );

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryCardsTest.spec.js:38:60

    Pending operations:
      - locator.click at tests\MercuryCardsTest.spec.js:38:60

]]>
</failure>
</testcase>
<testcase name="24. Card details and reveal" classname="[pixel] › tests\MercuryCardsTest.spec.js › 24. Card details and reveal" time="30.004">
<failure message="MercuryCardsTest.spec.js:44:7 24. Card details and reveal" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryCardsTest.spec.js:44:7 › 24. Card details and reveal ======================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByText('••1234 Office Card')
    ============================================================

      44 |   test('24. Card details and reveal', async ({ page }) => {
      45 |     await page.goto('https://demo.mercury.com/cards');
    > 46 |     await page.getByText('••1234 Office Card').click();
         |                                                ^
      47 |     await page.getByRole('button', { name: 'Reveal card details' }).click();
      48 |     const locator = await page.getByText('5268 7600 0000 1234');
      49 |     await expect(locator).toHaveText('5268 7600 0000 1234');

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryCardsTest.spec.js:46:48

    Pending operations:
      - locator.click at tests\MercuryCardsTest.spec.js:46:48

]]>
</failure>
</testcase>
</testsuite>
<testsuite name="tests\MercuryCreditTest.spec.js" timestamp="1674009963863" hostname="" tests="2" failures="1" skipped="0" time="31.772" errors="0">
<testcase name="25. Credit Page available" classname="[pixel] › tests\MercuryCreditTest.spec.js › 25. Credit Page available" time="1.758">
</testcase>
<testcase name="26. Credit pay" classname="[pixel] › tests\MercuryCreditTest.spec.js › 26. Credit pay" time="30.014">
<failure message="MercuryCreditTest.spec.js:8:5 26. Credit pay" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryCreditTest.spec.js:8:5 › 26. Credit pay ===================================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByRole('button', { name: 'Pay' }).first()
    ============================================================

       8 | test('26. Credit pay', async ({ page }) => {
       9 |     await page.goto('https://demo.mercury.com/credit');
    > 10 |     await page.getByRole('button', { name: 'Pay' }).first().click();
         |                                                             ^
      11 |     await page.getByLabel('Amount').click({
      12 |       clickCount: 4
      13 |     });

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryCreditTest.spec.js:10:61

    Pending operations:
      - locator.click at tests\MercuryCreditTest.spec.js:10:61

]]>
</failure>
</testcase>
</testsuite>
<testsuite name="tests\MercuryHomeTest.spec.js" timestamp="1674009963863" hostname="" tests="6" failures="6" skipped="0" time="157.634" errors="0">
<testcase name="08.If signed in" classname="[pixel] › tests\MercuryHomeTest.spec.js › 08.If signed in" time="7.585">
<failure message="MercuryHomeTest.spec.js:3:5 08.If signed in" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryHomeTest.spec.js:3:5 › 08.If signed in ====================================

    Error: Timed out 5000ms waiting for expect(received).toHaveText(expected)

    Expected string: "Welcome, Jane"
    Received string: ""
    Call log:
      - expect.toHaveText with timeout 5000ms
      - waiting for getByText('Welcome, Jane')
      - waiting for getByText('Welcome, Jane')


      4 |     await page.goto('https://demo.mercury.com/dashboard');
      5 |     const locator = page.getByText('Welcome, Jane');
    > 6 |     await expect(locator).toHaveText('Welcome, Jane');
        |                           ^
      7 | })
      8 |
      9 | test('09. If Move money works', async ({ page }) => {

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryHomeTest.spec.js:6:27
]]>
</failure>
</testcase>
<testcase name="09. If Move money works" classname="[pixel] › tests\MercuryHomeTest.spec.js › 09. If Move money works" time="30.013">
<failure message="MercuryHomeTest.spec.js:9:5 09. If Move money works" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryHomeTest.spec.js:9:5 › 09. If Move money works ============================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByRole('link', { name: 'Capital' })
    ============================================================

       9 | test('09. If Move money works', async ({ page }) => {
      10 |     await page.goto('https://demo.mercury.com/dashboard');
    > 11 |     await page.getByRole('link', { name: 'Capital' }).click();
         |                                                       ^
      12 |     await page.getByRole('button', { name: 'Move Money' }).click();
      13 |     await page.getByText('Pay Someone').click();
      14 |     await page.getByText('Jason Green').click();

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryHomeTest.spec.js:11:55

    Pending operations:
      - locator.click at tests\MercuryHomeTest.spec.js:11:55

]]>
</failure>
</testcase>
<testcase name="10. Add fund" classname="[pixel] › tests\MercuryHomeTest.spec.js › 10. Add fund" time="30.004">
<failure message="MercuryHomeTest.spec.js:35:5 10. Add fund" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryHomeTest.spec.js:35:5 › 10. Add fund ======================================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByRole('button', { name: 'Move Money' })
    ============================================================

      35 | test('10. Add fund', async ({ page }) => {
      36 |     await page.goto('https://demo.mercury.com/dashboard');
    > 37 |     await page.getByRole('button', { name: 'Move Money' }).click();
         |                                                            ^
      38 |     await page.getByText('Add or Receive Funds').click();
      39 |     await page.getByText('Bank Transfer').click();
      40 |     await page.getByPlaceholder('0.00').click();

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryHomeTest.spec.js:37:60

    Pending operations:
      - locator.click at tests\MercuryHomeTest.spec.js:37:60

]]>
</failure>
</testcase>
<testcase name="11. Payment Request" classname="[pixel] › tests\MercuryHomeTest.spec.js › 11. Payment Request" time="30.011">
<failure message="MercuryHomeTest.spec.js:52:7 11. Payment Request" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryHomeTest.spec.js:52:7 › 11. Payment Request ===============================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByRole('button', { name: 'Move Money' })
    ============================================================

      52 |   test('11. Payment Request', async ({ page }) => {
      53 |     await page.goto('https://demo.mercury.com/dashboard');
    > 54 |     await page.getByRole('button', { name: 'Move Money' }).click();
         |                                                            ^
      55 |     await page.getByText('Payment Request').click();
      56 |     await page.getByPlaceholder('Choose or create a contact').click();
      57 |     await page.locator('div:nth-child(2) > .styles__option_e0cBW').first().click();

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryHomeTest.spec.js:54:60

    Pending operations:
      - locator.click at tests\MercuryHomeTest.spec.js:54:60

]]>
</failure>
</testcase>
<testcase name="12. Transfer Between Accounts" classname="[pixel] › tests\MercuryHomeTest.spec.js › 12. Transfer Between Accounts" time="30.014">
<failure message="MercuryHomeTest.spec.js:69:7 12. Transfer Between Accounts" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryHomeTest.spec.js:69:7 › 12. Transfer Between Accounts =====================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByRole('button', { name: 'Move Money' })
    ============================================================

      69 |   test('12. Transfer Between Accounts', async ({ page }) => {
      70 |     await page.goto('https://demo.mercury.com/dashboard');
    > 71 |     await page.getByRole('button', { name: 'Move Money' }).click();
         |                                                            ^
      72 |     await page.getByText('Transfer Between Accounts').click();
      73 |     await page.getByPlaceholder('0.00').click();
      74 |     await page.getByPlaceholder('0.00').fill('100');

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryHomeTest.spec.js:71:60

    Pending operations:
      - locator.click at tests\MercuryHomeTest.spec.js:71:60

]]>
</failure>
</testcase>
<testcase name="13. Search Bar Function" classname="[pixel] › tests\MercuryHomeTest.spec.js › 13. Search Bar Function" time="30.007">
<failure message="MercuryHomeTest.spec.js:85:7 13. Search Bar Function" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryHomeTest.spec.js:85:7 › 13. Search Bar Function ===========================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByPlaceholder('Search for transactions, accounts, pages, payees …')
    ============================================================

      85 |   test('13. Search Bar Function', async ({ page }) => {
      86 |     await page.goto('https://demo.mercury.com/dashboard');
    > 87 |     await page.getByPlaceholder('Search for transactions, accounts, pages, payees …').click();
         |                                                                                       ^
      88 |     await page.getByPlaceholder('Search for transactions, accounts, pages, payees …').fill('tra');
      89 |     const locator = await page.getByText('Transactions Page');
      90 |     await expect(locator).toHaveText('Transactions Page');

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryHomeTest.spec.js:87:87

    Pending operations:
      - locator.click at tests\MercuryHomeTest.spec.js:87:87

]]>
</failure>
</testcase>
</testsuite>
<testsuite name="tests\MercuryPaymentTest.spec.js" timestamp="1674009963863" hostname="" tests="6" failures="5" skipped="0" time="151.767" errors="0">
<testcase name="14. Payment Page available" classname="[pixel] › tests\MercuryPaymentTest.spec.js › 14. Payment Page available" time="1.732">
</testcase>
<testcase name="15. Incoming Payment" classname="[pixel] › tests\MercuryPaymentTest.spec.js › 15. Incoming Payment" time="30.012">
<failure message="MercuryPaymentTest.spec.js:8:5 15. Incoming Payment" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryPaymentTest.spec.js:8:5 › 15. Incoming Payment ============================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByText('Incoming')
    ============================================================

       8 | test('15. Incoming Payment', async ({ page }) => {
       9 |     await page.goto('https://demo.mercury.com/payments');
    > 10 |     await page.getByText('Incoming').click();
         |                                      ^
      11 |     const locator = await page.getByText('Payment Requests');
      12 |     await expect(locator).toHaveText('Payment Requests');
      13 |     await page.getByText('CBCharles Bonito').first().click();

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryPaymentTest.spec.js:10:38

    Pending operations:
      - locator.click at tests\MercuryPaymentTest.spec.js:10:38

]]>
</failure>
</testcase>
<testcase name="16. Recipents Page" classname="[pixel] › tests\MercuryPaymentTest.spec.js › 16. Recipents Page" time="30.007">
<failure message="MercuryPaymentTest.spec.js:18:7 16. Recipents Page" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryPaymentTest.spec.js:18:7 › 16. Recipents Page =============================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByText('Recipients')
    ============================================================

      18 |   test('16. Recipents Page', async ({ page }) => {
      19 |     await page.goto('https://demo.mercury.com/payments');
    > 20 |     await page.getByText('Recipients').click();
         |                                        ^
      21 |     await expect(page).toHaveURL('https://demo.mercury.com/payments#recipients');
      22 |   });
      23 |

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryPaymentTest.spec.js:20:40

    Pending operations:
      - locator.click at tests\MercuryPaymentTest.spec.js:20:40

]]>
</failure>
</testcase>
<testcase name="17. Recipents Details" classname="[pixel] › tests\MercuryPaymentTest.spec.js › 17. Recipents Details" time="30.013">
<failure message="MercuryPaymentTest.spec.js:24:7 17. Recipents Details" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryPaymentTest.spec.js:24:7 › 17. Recipents Details ==========================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByText('Recipients')
    ============================================================

      24 |   test('17. Recipents Details', async ({ page }) => {
      25 |     await page.goto('https://demo.mercury.com/payments');
    > 26 |     await page.getByText('Recipients').click();
         |                                        ^
      27 |     await page.getByRole('link', { name: 'Aliyah McMahon' }).click();
      28 |     const locator = await page.getByText('Aliyah McMahon').nth(1);
      29 |     await expect(locator).toHaveText('Aliyah McMahon');

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryPaymentTest.spec.js:26:40

    Pending operations:
      - locator.click at tests\MercuryPaymentTest.spec.js:26:40

]]>
</failure>
</testcase>
<testcase name="18. Recipents request payment" classname="[pixel] › tests\MercuryPaymentTest.spec.js › 18. Recipents request payment" time="30.004">
<failure message="MercuryPaymentTest.spec.js:32:7 18. Recipents request payment" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryPaymentTest.spec.js:32:7 › 18. Recipents request payment ==================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByRole('link', { name: 'Request' })
    ============================================================

      32 |   test('18. Recipents request payment', async ({ page }) => {
      33 |     await page.goto('https://demo.mercury.com/payments');
    > 34 |     await page.getByRole('link', { name: 'Request' }).click();
         |                                                       ^
      35 |     await expect(page).toHaveURL('https://demo.mercury.com/payments/requests/create');
      36 |     await page.locator('.styles__inputChevron_xTwvi > .svg-inline--fa > path').first().click();
      37 |     await page.locator('.styles__option_e0cBW').first().click();

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryPaymentTest.spec.js:34:55

    Pending operations:
      - locator.click at tests\MercuryPaymentTest.spec.js:34:55

]]>
</failure>
</testcase>
<testcase name="19. Send Payment" classname="[pixel] › tests\MercuryPaymentTest.spec.js › 19. Send Payment" time="29.999">
<failure message="MercuryPaymentTest.spec.js:47:7 19. Send Payment" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryPaymentTest.spec.js:47:7 › 19. Send Payment ===============================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByRole('link', { name: 'Send' })
    ============================================================

      47 |   test('19. Send Payment', async ({ page }) => {
      48 |     await page.goto('https://demo.mercury.com/payments');
    > 49 |     await page.getByRole('link', { name: 'Send' }).click();
         |                                                    ^
      50 |     await page.locator('span').filter({ hasText: 'Jason Green' }).first().click();
      51 |     await page.getByRole('button', { name: 'Next' }).click();
      52 |     await page.getByRole('button', { name: 'Next' }).click();

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryPaymentTest.spec.js:49:52

    Pending operations:
      - locator.click at tests\MercuryPaymentTest.spec.js:49:52

]]>
</failure>
</testcase>
</testsuite>
<testsuite name="tests\MercuryTransactionTest.spec.js" timestamp="1674009963863" hostname="" tests="2" failures="2" skipped="0" time="60.017" errors="0">
<testcase name="14. is Transaction filters works" classname="[pixel] › tests\MercuryTransactionTest.spec.js › 14. is Transaction filters works" time="30.006">
<failure message="MercuryTransactionTest.spec.js:3:5 14. is Transaction filters works" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryTransactionTest.spec.js:3:5 › 14. is Transaction filters works ============

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByRole('button', { name: 'Add Filter' })
    ============================================================

      3 | test('14. is Transaction filters works', async ({ page }) => {
      4 |   await page.goto('https://demo.mercury.com/transactions');
    > 5 |   await page.getByRole('button', { name: 'Add Filter' }).click();
        |                                                          ^
      6 |   await page.getByRole('tab', { name: 'Amount' }).getByText('Amount').click();
      7 |   await page.locator('label').filter({ hasText: 'In (e.g. deposits, refunds)' }).click();
      8 |   await page.getByLabel('Specific amount').click();

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryTransactionTest.spec.js:5:58

    Pending operations:
      - locator.click at tests\MercuryTransactionTest.spec.js:5:58

]]>
</failure>
</testcase>
<testcase name="15. view all transactions" classname="[pixel] › tests\MercuryTransactionTest.spec.js › 15. view all transactions" time="30.011">
<failure message="MercuryTransactionTest.spec.js:16:5 15. view all transactions" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryTransactionTest.spec.js:16:5 › 15. view all transactions ==================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByText('Jameson Accounting')
    ============================================================

      16 | test('15. view all transactions', async ({ page }) => {
      17 |     await page.goto('https://demo.mercury.com/transactions');
    > 18 |     await page.getByText('Jameson Accounting').click();
         |                                                ^
      19 |     await page.getByRole('link', { name: 'Jameson Accounting View all transactions' }).click();
      20 |     await expect(page.getByRole('button', { name: 'Jameson Accounting Remove Tag' })).toBeVisible();
      21 | });

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryTransactionTest.spec.js:18:48

    Pending operations:
      - locator.click at tests\MercuryTransactionTest.spec.js:18:48

]]>
</failure>
</testcase>
</testsuite>
<testsuite name="tests\MercuryTreasuryTest.spec.js" timestamp="1674009963863" hostname="" tests="4" failures="3" skipped="0" time="91.995" errors="0">
<testcase name="27. Treasury Page Available" classname="[pixel] › tests\MercuryTreasuryTest.spec.js › 27. Treasury Page Available" time="1.974">
</testcase>
<testcase name="28. Treasury Transfer In" classname="[pixel] › tests\MercuryTreasuryTest.spec.js › 28. Treasury Transfer In" time="30.001">
<failure message="MercuryTreasuryTest.spec.js:8:5 28. Treasury Transfer In" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryTreasuryTest.spec.js:8:5 › 28. Treasury Transfer In =======================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByRole('button', { name: 'Transfer Funds' }).nth(1)
    ============================================================

       8 | test('28. Treasury Transfer In', async ({ page }) => {
       9 |     await page.goto('https://demo.mercury.com/accounts/treasury/party-treasury-id-0');
    > 10 |     await page.getByRole('button', { name: 'Transfer Funds' }).nth(1).click();
         |                                                                       ^
      11 |     await page.getByRole('menuitem', { name: 'Transfer In' }).click();
      12 |     await page.getByPlaceholder('0.00').click();
      13 |     await page.getByPlaceholder('0.00').fill('10');

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryTreasuryTest.spec.js:10:71

    Pending operations:
      - locator.click at tests\MercuryTreasuryTest.spec.js:10:71

]]>
</failure>
</testcase>
<testcase name="29. Treasury Transfer out" classname="[pixel] › tests\MercuryTreasuryTest.spec.js › 29. Treasury Transfer out" time="30.006">
<failure message="MercuryTreasuryTest.spec.js:22:5 29. Treasury Transfer out" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryTreasuryTest.spec.js:22:5 › 29. Treasury Transfer out =====================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByRole('button', { name: 'Transfer Funds' }).nth(1)
    ============================================================

      22 | test('29. Treasury Transfer out', async ({ page }) => {
      23 |     await page.goto('https://demo.mercury.com/accounts/treasury/party-treasury-id-0');
    > 24 |     await page.getByRole('button', { name: 'Transfer Funds' }).nth(1).click();
         |                                                                       ^
      25 |     await page.getByRole('menuitem', { name: 'Transfer Out' }).click();
      26 |     await page.getByPlaceholder('0.00').click();
      27 |     await page.getByPlaceholder('0.00').fill('10');

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryTreasuryTest.spec.js:24:71

    Pending operations:
      - locator.click at tests\MercuryTreasuryTest.spec.js:24:71

]]>
</failure>
</testcase>
<testcase name="30. Treasury Daily and Monthly filter" classname="[pixel] › tests\MercuryTreasuryTest.spec.js › 30. Treasury Daily and Monthly filter" time="30.014">
<failure message="MercuryTreasuryTest.spec.js:36:5 30. Treasury Daily and Monthly filter" type="FAILURE">
<![CDATA[  [pixel] › tests\MercuryTreasuryTest.spec.js:36:5 › 30. Treasury Daily and Monthly filter =========

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByRole('button', { name: 'Daily' }).nth(1)
    ============================================================

      36 | test('30. Treasury Daily and Monthly filter', async ({ page }) => {
      37 |     await page.goto('https://demo.mercury.com/accounts/treasury/party-treasury-id-0');
    > 38 |     await page.getByRole('button', { name: 'Daily' }).nth(1).click();
         |                                                              ^
      39 |     await page.getByRole('menuitem', { name: 'Monthly' }).click();
      40 |     const locator = await page.getByText('Month');
      41 |     await expect(locator).toHaveText('Month');

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryTreasuryTest.spec.js:38:62

    Pending operations:
      - locator.click at tests\MercuryTreasuryTest.spec.js:38:62

]]>
</failure>
</testcase>
</testsuite>
<testsuite name="tests\MercuryAvailabilityTest.spec.js" timestamp="1674009963863" hostname="" tests="7" failures="0" skipped="0" time="18.639" errors="0">
<testcase name="01.If Home page Available" classname="[firefox] › tests\MercuryAvailabilityTest.spec.js › 01.If Home page Available" time="4.923">
</testcase>
<testcase name="02.If Transaction button Available" classname="[firefox] › tests\MercuryAvailabilityTest.spec.js › 02.If Transaction button Available" time="2.071">
</testcase>
<testcase name="03.If Payment button Available" classname="[firefox] › tests\MercuryAvailabilityTest.spec.js › 03.If Payment button Available" time="2.233">
</testcase>
<testcase name="04.If Cards button Available" classname="[firefox] › tests\MercuryAvailabilityTest.spec.js › 04.If Cards button Available" time="2.165">
</testcase>
<testcase name="05.If Credit button Available" classname="[firefox] › tests\MercuryAvailabilityTest.spec.js › 05.If Credit button Available" time="2.268">
</testcase>
<testcase name="06.If Tresury button Available" classname="[firefox] › tests\MercuryAvailabilityTest.spec.js › 06.If Tresury button Available" time="2.023">
</testcase>
<testcase name="07.If Capital button Available" classname="[firefox] › tests\MercuryAvailabilityTest.spec.js › 07.If Capital button Available" time="2.956">
</testcase>
</testsuite>
<testsuite name="tests\MercuryCardsTest.spec.js" timestamp="1674009963863" hostname="" tests="5" failures="3" skipped="0" time="75.9" errors="0">
<testcase name="20. If cards page available" classname="[firefox] › tests\MercuryCardsTest.spec.js › 20. If cards page available" time="2.798">
</testcase>
<testcase name="21. Issue new standard card" classname="[firefox] › tests\MercuryCardsTest.spec.js › 21. Issue new standard card" time="30.011">
<failure message="MercuryCardsTest.spec.js:8:5 21. Issue new standard card" type="FAILURE">
<![CDATA[  [firefox] › tests\MercuryCardsTest.spec.js:8:5 › 21. Issue new standard card =====================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for locator('#id-j14l1x')
    ============================================================

       8 | test('21. Issue new standard card', async ({ page }) => {
       9 |     await page.goto('https://demo.mercury.com/cards');
    > 10 |     await page.locator('#id-j14l1x').click();
         |                                      ^
      11 |     await page.getByText('Standard card').click();
      12 |     await page.locator('.styles__card_BmqNZ').first().click();
      13 |     await page.getByPlaceholder('e.g. Lunch Card').click();

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryCardsTest.spec.js:10:38

    Pending operations:
      - locator.click at tests\MercuryCardsTest.spec.js:10:38

]]>
</failure>
</testcase>
<testcase name="22. Issue new merchant card" classname="[firefox] › tests\MercuryCardsTest.spec.js › 22. Issue new merchant card" time="30.012">
<failure message="MercuryCardsTest.spec.js:20:7 22. Issue new merchant card" type="FAILURE">
<![CDATA[  [firefox] › tests\MercuryCardsTest.spec.js:20:7 › 22. Issue new merchant card ====================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for locator('#id-lprcjl')
    ============================================================

      20 |   test('22. Issue new merchant card', async ({ page }) => {
      21 |     await page.goto('https://demo.mercury.com/cards');
    > 22 |     await page.locator('#id-lprcjl').click();
         |                                      ^
      23 |     const locator = await page.getByText('Merchant card');
      24 |     await expect(locator).toHaveText('Merchant card')
      25 |     await page.getByRole('heading', { name: 'Create a merchant card' }).click();

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryCardsTest.spec.js:22:38

    Pending operations:
      - locator.click at tests\MercuryCardsTest.spec.js:22:38

]]>
</failure>
</testcase>
<testcase name="23. Card filter test" classname="[firefox] › tests\MercuryCardsTest.spec.js › 23. Card filter test" time="8.375">
<failure message="MercuryCardsTest.spec.js:36:7 23. Card filter test" type="FAILURE">
<![CDATA[  [firefox] › tests\MercuryCardsTest.spec.js:36:7 › 23. Card filter test ===========================

    Error: expect(received).toHaveText(expected)

    Expected string: "Credit Cards Remove Tag"
    Received string: "Credit Cards"
    Call log:
      - expect.toHaveText with timeout 5000ms
      - waiting for getByRole('button', { name: 'Credit Cards Remove Tag' })
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"
      - waiting for getByRole('button', { name: 'Credit Cards Remove Tag' })
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"


      39 |     await page.getByLabel('Credit').check();
      40 |     const locator = await page.getByRole('button', { name: 'Credit Cards Remove Tag' });
    > 41 |     await expect(locator).toHaveText('Credit Cards Remove Tag' );
         |                           ^
      42 |   });
      43 |
      44 |   test('24. Card details and reveal', async ({ page }) => {

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryCardsTest.spec.js:41:27
]]>
</failure>
</testcase>
<testcase name="24. Card details and reveal" classname="[firefox] › tests\MercuryCardsTest.spec.js › 24. Card details and reveal" time="4.704">
</testcase>
</testsuite>
<testsuite name="tests\MercuryCreditTest.spec.js" timestamp="1674009963863" hostname="" tests="2" failures="1" skipped="0" time="33.518" errors="0">
<testcase name="25. Credit Page available" classname="[firefox] › tests\MercuryCreditTest.spec.js › 25. Credit Page available" time="3.506">
</testcase>
<testcase name="26. Credit pay" classname="[firefox] › tests\MercuryCreditTest.spec.js › 26. Credit pay" time="30.012">
<failure message="MercuryCreditTest.spec.js:8:5 26. Credit pay" type="FAILURE">
<![CDATA[  [firefox] › tests\MercuryCreditTest.spec.js:8:5 › 26. Credit pay =================================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByRole('button', { name: 'Confirm Payment' })
    ============================================================

      15 |     await page.getByRole('button', { name: 'Review' }).click();
      16 |     await page.locator('div').filter({ hasText: 'Make a credit paymentOnce confirmed, your payment will instantly be applied to y' }).nth(2).click();
    > 17 |     await page.getByRole('button', { name: 'Confirm Payment' }).click();
         |                                                                 ^
      18 |     await expect(page).toHaveURL('https://demo.mercury.com/credit/onboarding');
      19 | });
      20 |

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryCreditTest.spec.js:17:65

    Pending operations:
      - locator.click at tests\MercuryCreditTest.spec.js:17:65

]]>
</failure>
</testcase>
</testsuite>
<testsuite name="tests\MercuryHomeTest.spec.js" timestamp="1674009963863" hostname="" tests="6" failures="2" skipped="0" time="56.738" errors="0">
<testcase name="08.If signed in" classname="[firefox] › tests\MercuryHomeTest.spec.js › 08.If signed in" time="3.57">
</testcase>
<testcase name="09. If Move money works" classname="[firefox] › tests\MercuryHomeTest.spec.js › 09. If Move money works" time="30.012">
<failure message="MercuryHomeTest.spec.js:9:5 09. If Move money works" type="FAILURE">
<![CDATA[  [firefox] › tests\MercuryHomeTest.spec.js:9:5 › 09. If Move money works ==========================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByPlaceholder('0.00')
    ============================================================

      16 |     await page.getByText('International WireUsed last timeFree for USD1-3 business days').click();
      17 |     await page.getByRole('button', { name: 'Next' }).click();
    > 18 |     await page.getByPlaceholder('0.00').click();
         |                                         ^
      19 |     await page.getByPlaceholder('0.00').fill('15');
      20 |     await page.getByText('Send as SHAFree').click();
      21 |     await page.getByRole('button', { name: 'Next' }).click();

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryHomeTest.spec.js:18:41

    Pending operations:
      - locator.click at tests\MercuryHomeTest.spec.js:18:41

]]>
</failure>
</testcase>
<testcase name="10. Add fund" classname="[firefox] › tests\MercuryHomeTest.spec.js › 10. Add fund" time="4.905">
</testcase>
<testcase name="11. Payment Request" classname="[firefox] › tests\MercuryHomeTest.spec.js › 11. Payment Request" time="5.521">
</testcase>
<testcase name="12. Transfer Between Accounts" classname="[firefox] › tests\MercuryHomeTest.spec.js › 12. Transfer Between Accounts" time="4.61">
</testcase>
<testcase name="13. Search Bar Function" classname="[firefox] › tests\MercuryHomeTest.spec.js › 13. Search Bar Function" time="8.12">
<failure message="MercuryHomeTest.spec.js:85:7 13. Search Bar Function" type="FAILURE">
<![CDATA[  [firefox] › tests\MercuryHomeTest.spec.js:85:7 › 13. Search Bar Function =========================

    Error: Timed out 5000ms waiting for expect(received).toHaveText(expected)

    Expected string: "Transactions Page"
    Received string: ""
    Call log:
      - expect.toHaveText with timeout 5000ms
      - waiting for getByText('Transactions Page')
      - waiting for getByText('Transactions Page')


      88 |     await page.getByPlaceholder('Search for transactions, accounts, pages, payees …').fill('tra');
      89 |     const locator = await page.getByText('Transactions Page');
    > 90 |     await expect(locator).toHaveText('Transactions Page');
         |                           ^
      91 |     await page.getByText('Transactions Page').click();
      92 |     await expect(page).toHaveURL('https://demo.mercury.com/transactions');
      93 |   });

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryHomeTest.spec.js:90:27
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="tests\MercuryPaymentTest.spec.js" timestamp="1674009963863" hostname="" tests="6" failures="2" skipped="0" time="27.942" errors="0">
<testcase name="14. Payment Page available" classname="[firefox] › tests\MercuryPaymentTest.spec.js › 14. Payment Page available" time="2.939">
</testcase>
<testcase name="15. Incoming Payment" classname="[firefox] › tests\MercuryPaymentTest.spec.js › 15. Incoming Payment" time="3.071">
<failure message="MercuryPaymentTest.spec.js:8:5 15. Incoming Payment" type="FAILURE">
<![CDATA[  [firefox] › tests\MercuryPaymentTest.spec.js:8:5 › 15. Incoming Payment ==========================

    TypeError: Assignment to constant variable.

      12 |     await expect(locator).toHaveText('Payment Requests');
      13 |     await page.getByText('CBCharles Bonito').first().click();
    > 14 |     locator = await page.getByText('June consulting fees for Pluto Project');
         |            ^
      15 |     await expect(locator).toHaveText('June consulting fees for Pluto Project');
      16 |   });
      17 |

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryPaymentTest.spec.js:14:12
]]>
</failure>
</testcase>
<testcase name="16. Recipents Page" classname="[firefox] › tests\MercuryPaymentTest.spec.js › 16. Recipents Page" time="3.741">
</testcase>
<testcase name="17. Recipents Details" classname="[firefox] › tests\MercuryPaymentTest.spec.js › 17. Recipents Details" time="3.009">
</testcase>
<testcase name="18. Recipents request payment" classname="[firefox] › tests\MercuryPaymentTest.spec.js › 18. Recipents request payment" time="5.044">
</testcase>
<testcase name="19. Send Payment" classname="[firefox] › tests\MercuryPaymentTest.spec.js › 19. Send Payment" time="10.138">
<failure message="MercuryPaymentTest.spec.js:47:7 19. Send Payment" type="FAILURE">
<![CDATA[  [firefox] › tests\MercuryPaymentTest.spec.js:47:7 › 19. Send Payment =============================

    Error: expect(received).toHaveText(expected)

    Expected string: "You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days"
    Received string: "You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days.PendingJGJason Green−$15.00ReceiptGo to DashboardMake Another Payment"
    Call log:
      - expect.toHaveText with timeout 5000ms
      - waiting for getByText('You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days')
      - waiting for getByText('You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days')
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days.PendingJGJason Green−$15.00ReceiptGo to DashboardMake Another Payment"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days.PendingJGJason Green−$15.00ReceiptGo to DashboardMake Another Payment"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days.PendingJGJason Green−$15.00ReceiptGo to DashboardMake Another Payment"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days.PendingJGJason Green−$15.00ReceiptGo to DashboardMake Another Payment"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days.PendingJGJason Green−$15.00ReceiptGo to DashboardMake Another Payment"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days.PendingJGJason Green−$15.00ReceiptGo to DashboardMake Another Payment"


      65 |     await page.getByRole('button', { name: 'Send Wire' }).click();
      66 |     const locator = await page.getByText('You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days');
    > 67 |     await expect(locator).toHaveText('You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days');
         |                           ^
      68 |   });

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryPaymentTest.spec.js:67:27
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="tests\MercuryTransactionTest.spec.js" timestamp="1674009963863" hostname="" tests="2" failures="2" skipped="0" time="40.787" errors="0">
<testcase name="14. is Transaction filters works" classname="[firefox] › tests\MercuryTransactionTest.spec.js › 14. is Transaction filters works" time="10.777">
<failure message="MercuryTransactionTest.spec.js:3:5 14. is Transaction filters works" type="FAILURE">
<![CDATA[  [firefox] › tests\MercuryTransactionTest.spec.js:3:5 › 14. is Transaction filters works ==========

    Error: Timed out 5000ms waiting for expect(received).toBeVisible()
    Call log:
      - expect.toBeVisible with timeout 5000ms
      - waiting for getByRole('button', { name: 'Money in, = $100 Remove Tag' })
      - waiting for getByRole('button', { name: 'Money in, = $100 Remove Tag' })


      10 |   await page.getByRole('tab', { name: 'Method' }).getByText('Method').click();
      11 |   await page.locator('span').filter({ hasText: 'Mercury Payment (ACH)' }).first().click();
    > 12 |   await expect(page.getByRole('button', { name: 'Money in, = $100 Remove Tag' })).toBeVisible();
         |                                                                                   ^
      13 |   await expect(page.getByRole('button', { name: 'Mercury Payment (ACH) Remove Tag' })).toBeVisible();
      14 | });
      15 |

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryTransactionTest.spec.js:12:83
]]>
</failure>
</testcase>
<testcase name="15. view all transactions" classname="[firefox] › tests\MercuryTransactionTest.spec.js › 15. view all transactions" time="30.01">
<failure message="MercuryTransactionTest.spec.js:16:5 15. view all transactions" type="FAILURE">
<![CDATA[  [firefox] › tests\MercuryTransactionTest.spec.js:16:5 › 15. view all transactions ================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByRole('link', { name: 'Jameson Accounting View all transactions' })
    ============================================================

      17 |     await page.goto('https://demo.mercury.com/transactions');
      18 |     await page.getByText('Jameson Accounting').click();
    > 19 |     await page.getByRole('link', { name: 'Jameson Accounting View all transactions' }).click();
         |                                                                                        ^
      20 |     await expect(page.getByRole('button', { name: 'Jameson Accounting Remove Tag' })).toBeVisible();
      21 | });
      22 |

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryTransactionTest.spec.js:19:88

    Pending operations:
      - locator.click at tests\MercuryTransactionTest.spec.js:19:88

]]>
</failure>
</testcase>
</testsuite>
<testsuite name="tests\MercuryTreasuryTest.spec.js" timestamp="1674009963863" hostname="" tests="4" failures="3" skipped="0" time="27.61" errors="0">
<testcase name="27. Treasury Page Available" classname="[firefox] › tests\MercuryTreasuryTest.spec.js › 27. Treasury Page Available" time="3.308">
</testcase>
<testcase name="28. Treasury Transfer In" classname="[firefox] › tests\MercuryTreasuryTest.spec.js › 28. Treasury Transfer In" time="10.705">
<failure message="MercuryTreasuryTest.spec.js:8:5 28. Treasury Transfer In" type="FAILURE">
<![CDATA[  [firefox] › tests\MercuryTreasuryTest.spec.js:8:5 › 28. Treasury Transfer In =====================

    Error: expect(received).toHaveText(expected)

    Expected string: "You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should a"
    Received string: "You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should arrive within 2-3 business days.Go to DashboardMake Another Transfer"
    Call log:
      - expect.toHaveText with timeout 5000ms
      - waiting for getByText('You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should a')
      - waiting for getByText('You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should a')
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should arrive within 2-3 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should arrive within 2-3 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should arrive within 2-3 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should arrive within 2-3 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should arrive within 2-3 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should arrive within 2-3 business days.Go to DashboardMake Another Transfer"


      17 |     await page.getByRole('button', { name: 'Transfer' }).click();
      18 |     const locator = await page.getByText('You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should a');
    > 19 |     await expect(locator).toHaveText('You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should a');
         |                           ^
      20 |   });
      21 |
      22 | test('29. Treasury Transfer out', async ({ page }) => {

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryTreasuryTest.spec.js:19:27
]]>
</failure>
</testcase>
<testcase name="29. Treasury Transfer out" classname="[firefox] › tests\MercuryTreasuryTest.spec.js › 29. Treasury Transfer out" time="9.615">
<failure message="MercuryTreasuryTest.spec.js:22:5 29. Treasury Transfer out" type="FAILURE">
<![CDATA[  [firefox] › tests\MercuryTreasuryTest.spec.js:22:5 › 29. Treasury Transfer out ===================

    Error: expect(received).toHaveText(expected)

    Expected string: "You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should"
    Received string: "You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should arrive within 4-5 business days.Go to DashboardMake Another Transfer"
    Call log:
      - expect.toHaveText with timeout 5000ms
      - waiting for getByText('You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should')
      - waiting for getByText('You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should')
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should arrive within 4-5 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should arrive within 4-5 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should arrive within 4-5 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should arrive within 4-5 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should arrive within 4-5 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should arrive within 4-5 business days.Go to DashboardMake Another Transfer"


      31 |     await page.getByRole('button', { name: 'Transfer' }).click();
      32 |     const locator = await page.getByText('You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should');
    > 33 |     await expect(locator).toHaveText('You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should');
         |                           ^
      34 | });
      35 |
      36 | test('30. Treasury Daily and Monthly filter', async ({ page }) => {

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryTreasuryTest.spec.js:33:27
]]>
</failure>
</testcase>
<testcase name="30. Treasury Daily and Monthly filter" classname="[firefox] › tests\MercuryTreasuryTest.spec.js › 30. Treasury Daily and Monthly filter" time="3.982">
<failure message="MercuryTreasuryTest.spec.js:36:5 30. Treasury Daily and Monthly filter" type="FAILURE">
<![CDATA[  [firefox] › tests\MercuryTreasuryTest.spec.js:36:5 › 30. Treasury Daily and Monthly filter =======

    expect.toHaveText: Error: strict mode violation: getByText('Month') resolved to 4 elements:
        1) <div class="styles__tiny_kCP28 styles__grey_eIIgC sty…>Last month’s return</div> aka getByText('Last month’s return')
        2) <div>…</div> aka getByRole('button', { name: 'Monthly' }).nth(1)
        3) <span class="styles__tiny_kCP28 styles__grey-medium_uV…>Month</span> aka getByText('Month').nth(2)
        4) <div class="styles__tiny_kCP28 styles__grey_eIIgC sty…>Last month’s fee</div> aka getByText('Last month’s fee')

    =========================== logs ===========================
    expect.toHaveText with timeout 5000ms
    waiting for getByText('Month')
      Error: strict mode violation: getByText('Month') resolved to 4 elements:
        1) <div class="styles__tiny_kCP28 styles__grey_eIIgC sty…>Last month’s return</div> aka getByText('Last month’s return')
        2) <div>…</div> aka getByRole('button', { name: 'Monthly' }).nth(1)
        3) <span class="styles__tiny_kCP28 styles__grey-medium_uV…>Month</span> aka getByText('Month').nth(2)
        4) <div class="styles__tiny_kCP28 styles__grey_eIIgC sty…>Last month’s fee</div> aka getByText('Last month’s fee')

    ============================================================

      39 |     await page.getByRole('menuitem', { name: 'Monthly' }).click();
      40 |     const locator = await page.getByText('Month');
    > 41 |     await expect(locator).toHaveText('Month');
         |                           ^
      42 |     await page.getByRole('button', { name: 'Monthly' }).nth(1).click();
      43 |     await page.getByRole('menuitem', { name: 'Daily' }).click();
      44 |     locator = await page.getByText('Date');

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryTreasuryTest.spec.js:41:27
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="tests\MercuryAvailabilityTest.spec.js" timestamp="1674009963863" hostname="" tests="7" failures="1" skipped="0" time="34.777" errors="0">
<testcase name="01.If Home page Available" classname="[webkit] › tests\MercuryAvailabilityTest.spec.js › 01.If Home page Available" time="4.714">
</testcase>
<testcase name="02.If Transaction button Available" classname="[webkit] › tests\MercuryAvailabilityTest.spec.js › 02.If Transaction button Available" time="4.464">
<failure message="MercuryAvailabilityTest.spec.js:7:5 02.If Transaction button Available" type="FAILURE">
<![CDATA[  [webkit] › tests\MercuryAvailabilityTest.spec.js:7:5 › 02.If Transaction button Available ========

    locator.click: Error: strict mode violation: getByRole('link', { name: 'Transactions' }) resolved to 3 elements:
        1) <a href="/transactions" class="styles__link_eiRKS s…>Transactions</a> aka getByRole('link', { name: 'Transactions' }).filter({ hasText: 'Transactions' })
        2) <a aria-label="View all outgoing transactions" href…>View All</a> aka getByRole('link', { name: 'View all outgoing transactions' })
        3) <a aria-label="View all incoming transactions" href…>View All</a> aka getByRole('link', { name: 'View all incoming transactions' })

    =========================== logs ===========================
    waiting for getByRole('link', { name: 'Transactions' })
    ============================================================

       7 | test('02.If Transaction button Available', async ({ page }) => {
       8 |     await page.goto('https://demo.mercury.com/dashboard');
    >  9 |     await page.getByRole('link', { name: 'Transactions' }).click();
         |                                                            ^
      10 |     await expect(page).toHaveURL('https://demo.mercury.com/transactions')
      11 | })
      12 | test('03.If Payment button Available', async ({ page }) => {

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryAvailabilityTest.spec.js:9:60
]]>
</failure>
</testcase>
<testcase name="03.If Payment button Available" classname="[webkit] › tests\MercuryAvailabilityTest.spec.js › 03.If Payment button Available" time="6.197">
</testcase>
<testcase name="04.If Cards button Available" classname="[webkit] › tests\MercuryAvailabilityTest.spec.js › 04.If Cards button Available" time="4.385">
</testcase>
<testcase name="05.If Credit button Available" classname="[webkit] › tests\MercuryAvailabilityTest.spec.js › 05.If Credit button Available" time="4.577">
</testcase>
<testcase name="06.If Tresury button Available" classname="[webkit] › tests\MercuryAvailabilityTest.spec.js › 06.If Tresury button Available" time="4.898">
</testcase>
<testcase name="07.If Capital button Available" classname="[webkit] › tests\MercuryAvailabilityTest.spec.js › 07.If Capital button Available" time="5.542">
</testcase>
</testsuite>
<testsuite name="tests\MercuryCardsTest.spec.js" timestamp="1674009963863" hostname="" tests="5" failures="3" skipped="0" time="80.384" errors="0">
<testcase name="20. If cards page available" classname="[webkit] › tests\MercuryCardsTest.spec.js › 20. If cards page available" time="5.453">
</testcase>
<testcase name="21. Issue new standard card" classname="[webkit] › tests\MercuryCardsTest.spec.js › 21. Issue new standard card" time="30.004">
<failure message="MercuryCardsTest.spec.js:8:5 21. Issue new standard card" type="FAILURE">
<![CDATA[  [webkit] › tests\MercuryCardsTest.spec.js:8:5 › 21. Issue new standard card ======================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for locator('#id-j14l1x')
    ============================================================

       8 | test('21. Issue new standard card', async ({ page }) => {
       9 |     await page.goto('https://demo.mercury.com/cards');
    > 10 |     await page.locator('#id-j14l1x').click();
         |                                      ^
      11 |     await page.getByText('Standard card').click();
      12 |     await page.locator('.styles__card_BmqNZ').first().click();
      13 |     await page.getByPlaceholder('e.g. Lunch Card').click();

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryCardsTest.spec.js:10:38

    Pending operations:
      - locator.click at tests\MercuryCardsTest.spec.js:10:38

]]>
</failure>
</testcase>
<testcase name="22. Issue new merchant card" classname="[webkit] › tests\MercuryCardsTest.spec.js › 22. Issue new merchant card" time="30.003">
<failure message="MercuryCardsTest.spec.js:20:7 22. Issue new merchant card" type="FAILURE">
<![CDATA[  [webkit] › tests\MercuryCardsTest.spec.js:20:7 › 22. Issue new merchant card =====================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for locator('#id-lprcjl')
    ============================================================

      20 |   test('22. Issue new merchant card', async ({ page }) => {
      21 |     await page.goto('https://demo.mercury.com/cards');
    > 22 |     await page.locator('#id-lprcjl').click();
         |                                      ^
      23 |     const locator = await page.getByText('Merchant card');
      24 |     await expect(locator).toHaveText('Merchant card')
      25 |     await page.getByRole('heading', { name: 'Create a merchant card' }).click();

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryCardsTest.spec.js:22:38

    Pending operations:
      - locator.click at tests\MercuryCardsTest.spec.js:22:38

]]>
</failure>
</testcase>
<testcase name="23. Card filter test" classname="[webkit] › tests\MercuryCardsTest.spec.js › 23. Card filter test" time="10.014">
<failure message="MercuryCardsTest.spec.js:36:7 23. Card filter test" type="FAILURE">
<![CDATA[  [webkit] › tests\MercuryCardsTest.spec.js:36:7 › 23. Card filter test ============================

    Error: expect(received).toHaveText(expected)

    Expected string: "Credit Cards Remove Tag"
    Received string: "Credit Cards"
    Call log:
      - expect.toHaveText with timeout 5000ms
      - waiting for getByRole('button', { name: 'Credit Cards Remove Tag' })
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"
      - waiting for getByRole('button', { name: 'Credit Cards Remove Tag' })
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"
      -   locator resolved to <li tabindex="0" role="button" class="styles__tag_h2…>…</li>
      -   unexpected value "Credit Cards"


      39 |     await page.getByLabel('Credit').check();
      40 |     const locator = await page.getByRole('button', { name: 'Credit Cards Remove Tag' });
    > 41 |     await expect(locator).toHaveText('Credit Cards Remove Tag' );
         |                           ^
      42 |   });
      43 |
      44 |   test('24. Card details and reveal', async ({ page }) => {

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryCardsTest.spec.js:41:27
]]>
</failure>
</testcase>
<testcase name="24. Card details and reveal" classname="[webkit] › tests\MercuryCardsTest.spec.js › 24. Card details and reveal" time="4.91">
</testcase>
</testsuite>
<testsuite name="tests\MercuryCreditTest.spec.js" timestamp="1674009963863" hostname="" tests="2" failures="0" skipped="0" time="10.684" errors="0">
<testcase name="25. Credit Page available" classname="[webkit] › tests\MercuryCreditTest.spec.js › 25. Credit Page available" time="3.704">
</testcase>
<testcase name="26. Credit pay" classname="[webkit] › tests\MercuryCreditTest.spec.js › 26. Credit pay" time="6.98">
</testcase>
</testsuite>
<testsuite name="tests\MercuryHomeTest.spec.js" timestamp="1674009963863" hostname="" tests="6" failures="2" skipped="0" time="71.524" errors="0">
<testcase name="08.If signed in" classname="[webkit] › tests\MercuryHomeTest.spec.js › 08.If signed in" time="4.019">
</testcase>
<testcase name="09. If Move money works" classname="[webkit] › tests\MercuryHomeTest.spec.js › 09. If Move money works" time="30.006">
<failure message="MercuryHomeTest.spec.js:9:5 09. If Move money works" type="FAILURE">
<![CDATA[  [webkit] › tests\MercuryHomeTest.spec.js:9:5 › 09. If Move money works ===========================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByPlaceholder('0.00')
    ============================================================

      16 |     await page.getByText('International WireUsed last timeFree for USD1-3 business days').click();
      17 |     await page.getByRole('button', { name: 'Next' }).click();
    > 18 |     await page.getByPlaceholder('0.00').click();
         |                                         ^
      19 |     await page.getByPlaceholder('0.00').fill('15');
      20 |     await page.getByText('Send as SHAFree').click();
      21 |     await page.getByRole('button', { name: 'Next' }).click();

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryHomeTest.spec.js:18:41

    Pending operations:
      - locator.click at tests\MercuryHomeTest.spec.js:18:41

]]>
</failure>
</testcase>
<testcase name="10. Add fund" classname="[webkit] › tests\MercuryHomeTest.spec.js › 10. Add fund" time="8.708">
</testcase>
<testcase name="11. Payment Request" classname="[webkit] › tests\MercuryHomeTest.spec.js › 11. Payment Request" time="10.464">
</testcase>
<testcase name="12. Transfer Between Accounts" classname="[webkit] › tests\MercuryHomeTest.spec.js › 12. Transfer Between Accounts" time="8.269">
</testcase>
<testcase name="13. Search Bar Function" classname="[webkit] › tests\MercuryHomeTest.spec.js › 13. Search Bar Function" time="10.058">
<failure message="MercuryHomeTest.spec.js:85:7 13. Search Bar Function" type="FAILURE">
<![CDATA[  [webkit] › tests\MercuryHomeTest.spec.js:85:7 › 13. Search Bar Function ==========================

    Error: Timed out 5000ms waiting for expect(received).toHaveText(expected)

    Expected string: "Transactions Page"
    Received string: ""
    Call log:
      - expect.toHaveText with timeout 5000ms
      - waiting for getByText('Transactions Page')
      - waiting for getByText('Transactions Page')


      88 |     await page.getByPlaceholder('Search for transactions, accounts, pages, payees …').fill('tra');
      89 |     const locator = await page.getByText('Transactions Page');
    > 90 |     await expect(locator).toHaveText('Transactions Page');
         |                           ^
      91 |     await page.getByText('Transactions Page').click();
      92 |     await expect(page).toHaveURL('https://demo.mercury.com/transactions');
      93 |   });

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryHomeTest.spec.js:90:27
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="tests\MercuryPaymentTest.spec.js" timestamp="1674009963863" hostname="" tests="6" failures="2" skipped="0" time="39.848" errors="0">
<testcase name="14. Payment Page available" classname="[webkit] › tests\MercuryPaymentTest.spec.js › 14. Payment Page available" time="2.945">
</testcase>
<testcase name="15. Incoming Payment" classname="[webkit] › tests\MercuryPaymentTest.spec.js › 15. Incoming Payment" time="5.243">
<failure message="MercuryPaymentTest.spec.js:8:5 15. Incoming Payment" type="FAILURE">
<![CDATA[  [webkit] › tests\MercuryPaymentTest.spec.js:8:5 › 15. Incoming Payment ===========================

    TypeError: Assignment to constant variable.

      12 |     await expect(locator).toHaveText('Payment Requests');
      13 |     await page.getByText('CBCharles Bonito').first().click();
    > 14 |     locator = await page.getByText('June consulting fees for Pluto Project');
         |            ^
      15 |     await expect(locator).toHaveText('June consulting fees for Pluto Project');
      16 |   });
      17 |

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryPaymentTest.spec.js:14:12
]]>
</failure>
</testcase>
<testcase name="16. Recipents Page" classname="[webkit] › tests\MercuryPaymentTest.spec.js › 16. Recipents Page" time="4.341">
</testcase>
<testcase name="17. Recipents Details" classname="[webkit] › tests\MercuryPaymentTest.spec.js › 17. Recipents Details" time="5.924">
</testcase>
<testcase name="18. Recipents request payment" classname="[webkit] › tests\MercuryPaymentTest.spec.js › 18. Recipents request payment" time="7.067">
</testcase>
<testcase name="19. Send Payment" classname="[webkit] › tests\MercuryPaymentTest.spec.js › 19. Send Payment" time="14.328">
<failure message="MercuryPaymentTest.spec.js:47:7 19. Send Payment" type="FAILURE">
<![CDATA[  [webkit] › tests\MercuryPaymentTest.spec.js:47:7 › 19. Send Payment ==============================

    Error: expect(received).toHaveText(expected)

    Expected string: "You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days"
    Received string: "You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days.PendingJGJason Green−$15.00ReceiptGo to DashboardMake Another Payment"
    Call log:
      - expect.toHaveText with timeout 5000ms
      - waiting for getByText('You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days')
      - waiting for getByText('You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days')
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days.PendingJGJason Green−$15.00ReceiptGo to DashboardMake Another Payment"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days.PendingJGJason Green−$15.00ReceiptGo to DashboardMake Another Payment"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days.PendingJGJason Green−$15.00ReceiptGo to DashboardMake Another Payment"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days.PendingJGJason Green−$15.00ReceiptGo to DashboardMake Another Payment"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days.PendingJGJason Green−$15.00ReceiptGo to DashboardMake Another Payment"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days.PendingJGJason Green−$15.00ReceiptGo to DashboardMake Another Payment"


      65 |     await page.getByRole('button', { name: 'Send Wire' }).click();
      66 |     const locator = await page.getByText('You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days');
    > 67 |     await expect(locator).toHaveText('You’ve sent $15.00to Jason GreenThe money should arrive within 1-3 business days');
         |                           ^
      68 |   });

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryPaymentTest.spec.js:67:27
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="tests\MercuryTransactionTest.spec.js" timestamp="1674009963863" hostname="" tests="2" failures="2" skipped="0" time="44.583" errors="0">
<testcase name="14. is Transaction filters works" classname="[webkit] › tests\MercuryTransactionTest.spec.js › 14. is Transaction filters works" time="14.583">
<failure message="MercuryTransactionTest.spec.js:3:5 14. is Transaction filters works" type="FAILURE">
<![CDATA[  [webkit] › tests\MercuryTransactionTest.spec.js:3:5 › 14. is Transaction filters works ===========

    Error: Timed out 5000ms waiting for expect(received).toBeVisible()
    Call log:
      - expect.toBeVisible with timeout 5000ms
      - waiting for getByRole('button', { name: 'Money in, = $100 Remove Tag' })
      - waiting for getByRole('button', { name: 'Money in, = $100 Remove Tag' })


      10 |   await page.getByRole('tab', { name: 'Method' }).getByText('Method').click();
      11 |   await page.locator('span').filter({ hasText: 'Mercury Payment (ACH)' }).first().click();
    > 12 |   await expect(page.getByRole('button', { name: 'Money in, = $100 Remove Tag' })).toBeVisible();
         |                                                                                   ^
      13 |   await expect(page.getByRole('button', { name: 'Mercury Payment (ACH) Remove Tag' })).toBeVisible();
      14 | });
      15 |

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryTransactionTest.spec.js:12:83
]]>
</failure>
</testcase>
<testcase name="15. view all transactions" classname="[webkit] › tests\MercuryTransactionTest.spec.js › 15. view all transactions" time="30">
<failure message="MercuryTransactionTest.spec.js:16:5 15. view all transactions" type="FAILURE">
<![CDATA[  [webkit] › tests\MercuryTransactionTest.spec.js:16:5 › 15. view all transactions =================

    Test timeout of 30000ms exceeded.

    locator.click: Target closed
    =========================== logs ===========================
    waiting for getByRole('link', { name: 'Jameson Accounting View all transactions' })
    ============================================================

      17 |     await page.goto('https://demo.mercury.com/transactions');
      18 |     await page.getByText('Jameson Accounting').click();
    > 19 |     await page.getByRole('link', { name: 'Jameson Accounting View all transactions' }).click();
         |                                                                                        ^
      20 |     await expect(page.getByRole('button', { name: 'Jameson Accounting Remove Tag' })).toBeVisible();
      21 | });
      22 |

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryTransactionTest.spec.js:19:88

    Pending operations:
      - locator.click at tests\MercuryTransactionTest.spec.js:19:88

]]>
</failure>
</testcase>
</testsuite>
<testsuite name="tests\MercuryTreasuryTest.spec.js" timestamp="1674009963863" hostname="" tests="4" failures="3" skipped="0" time="32.663" errors="0">
<testcase name="27. Treasury Page Available" classname="[webkit] › tests\MercuryTreasuryTest.spec.js › 27. Treasury Page Available" time="4.378">
</testcase>
<testcase name="28. Treasury Transfer In" classname="[webkit] › tests\MercuryTreasuryTest.spec.js › 28. Treasury Transfer In" time="13.255">
<failure message="MercuryTreasuryTest.spec.js:8:5 28. Treasury Transfer In" type="FAILURE">
<![CDATA[  [webkit] › tests\MercuryTreasuryTest.spec.js:8:5 › 28. Treasury Transfer In ======================

    Error: expect(received).toHaveText(expected)

    Expected string: "You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should a"
    Received string: "You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should arrive within 2-3 business days.Go to DashboardMake Another Transfer"
    Call log:
      - expect.toHaveText with timeout 5000ms
      - waiting for getByText('You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should a')
      - waiting for getByText('You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should a')
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should arrive within 2-3 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should arrive within 2-3 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should arrive within 2-3 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should arrive within 2-3 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should arrive within 2-3 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should arrive within 2-3 business days.Go to DashboardMake Another Transfer"


      17 |     await page.getByRole('button', { name: 'Transfer' }).click();
      18 |     const locator = await page.getByText('You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should a');
    > 19 |     await expect(locator).toHaveText('You’ve started a $10.00 transferfrom Ops / Payroll to TreasuryThe money should a');
         |                           ^
      20 |   });
      21 |
      22 | test('29. Treasury Transfer out', async ({ page }) => {

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryTreasuryTest.spec.js:19:27
]]>
</failure>
</testcase>
<testcase name="29. Treasury Transfer out" classname="[webkit] › tests\MercuryTreasuryTest.spec.js › 29. Treasury Transfer out" time="10.783">
<failure message="MercuryTreasuryTest.spec.js:22:5 29. Treasury Transfer out" type="FAILURE">
<![CDATA[  [webkit] › tests\MercuryTreasuryTest.spec.js:22:5 › 29. Treasury Transfer out ====================

    Error: expect(received).toHaveText(expected)

    Expected string: "You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should"
    Received string: "You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should arrive within 4-5 business days.Go to DashboardMake Another Transfer"
    Call log:
      - expect.toHaveText with timeout 5000ms
      - waiting for getByText('You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should')
      - waiting for getByText('You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should')
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should arrive within 4-5 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should arrive within 4-5 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should arrive within 4-5 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should arrive within 4-5 business days.Go to DashboardMake Another Transfer"
      -   locator resolved to <div class="styles__page-wrapper-centered_jzliu">…</div>
      -   unexpected value "You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should arrive within 4-5 business days.Go to DashboardMake Another Transfer"


      31 |     await page.getByRole('button', { name: 'Transfer' }).click();
      32 |     const locator = await page.getByText('You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should');
    > 33 |     await expect(locator).toHaveText('You’ve started a $10.00 transferfrom Treasury to Choice CheckingThe money should');
         |                           ^
      34 | });
      35 |
      36 | test('30. Treasury Daily and Monthly filter', async ({ page }) => {

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryTreasuryTest.spec.js:33:27
]]>
</failure>
</testcase>
<testcase name="30. Treasury Daily and Monthly filter" classname="[webkit] › tests\MercuryTreasuryTest.spec.js › 30. Treasury Daily and Monthly filter" time="4.247">
<failure message="MercuryTreasuryTest.spec.js:36:5 30. Treasury Daily and Monthly filter" type="FAILURE">
<![CDATA[  [webkit] › tests\MercuryTreasuryTest.spec.js:36:5 › 30. Treasury Daily and Monthly filter ========

    expect.toHaveText: Error: strict mode violation: getByText('Month') resolved to 4 elements:
        1) <div class="styles__tiny_kCP28 styles__grey_eIIgC sty…>Last month’s return</div> aka getByText('Last month’s return')
        2) <div>…</div> aka getByRole('button', { name: 'Monthly' }).nth(1)
        3) <span class="styles__tiny_kCP28 styles__grey-medium_uV…>Month</span> aka getByText('Month').nth(2)
        4) <div class="styles__tiny_kCP28 styles__grey_eIIgC sty…>Last month’s fee</div> aka getByText('Last month’s fee')

    =========================== logs ===========================
    expect.toHaveText with timeout 5000ms
    waiting for getByText('Month')
      strict mode violation: getByText('Month') resolved to 4 elements:
        1) <div class="styles__tiny_kCP28 styles__grey_eIIgC sty…>Last month’s return</div> aka getByText('Last month’s return')
        2) <div>…</div> aka getByRole('button', { name: 'Monthly' }).nth(1)
        3) <span class="styles__tiny_kCP28 styles__grey-medium_uV…>Month</span> aka getByText('Month').nth(2)
        4) <div class="styles__tiny_kCP28 styles__grey_eIIgC sty…>Last month’s fee</div> aka getByText('Last month’s fee')

    ============================================================

      39 |     await page.getByRole('menuitem', { name: 'Monthly' }).click();
      40 |     const locator = await page.getByText('Month');
    > 41 |     await expect(locator).toHaveText('Month');
         |                           ^
      42 |     await page.getByRole('button', { name: 'Monthly' }).nth(1).click();
      43 |     await page.getByRole('menuitem', { name: 'Daily' }).click();
      44 |     locator = await page.getByText('Date');

        at C:\Users\Mar Yong Rui\OneDrive - Ngee Ann Polytechnic\Documents\School Stuff\PFD\PlaywrightTesting\tests\MercuryTreasuryTest.spec.js:41:27
]]>
</failure>
</testcase>
</testsuite>
</testsuites>